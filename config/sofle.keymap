/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    left_encoder { steps = <80>; };

    right_encoder { steps = <80>; };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bspc {
            timeout-ms = <20>;
            key-positions = <31 32>;
            bindings = <&kp BSPC>;
        };

        combo_ctl_bspc {
            timeout-ms = <20>;
            key-positions = <30 31>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_del {
            timeout-ms = <20>;
            key-positions = <32 33>;
            bindings = <&kp DEL>;
        };

        em_email {
            bindings = <&email_dvorak>;
            key-positions = <45 27>;
            layers = <1>;
        };
    };

    macros {
        email_dvorak: email_dvorak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp P &kp S &kp K &kp L &kp G &kp V &kp S &kp DOT &kp A &kp L &kp K &kp S &kp L &kp AT &kp U &kp M &kp A &kp G &kp P &kp E &kp I &kp S &kp M>;
            label = "EMAIL_DVORAK";
            tap-ms = <3>;
        };
    };

    behaviors {
        mod_2_1: mod_2_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_2_1";
            #binding-cells = <0>;
            tapping-term-ms = <20>;
            bindings = <&mo 2>, <&mo 1>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3     &kp N4    &kp N5                           &kp N6    &kp N7         &kp N8     &kp N9    &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W     &kp E      &kp R     &kp T                            &kp Y     &kp U          &kp I      &kp O     &kp P     &kp LBKT
&gresc     &kp A   &kp S     &kp D      &kp F     &kp G                            &kp H     &kp J          &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C      &kp V     &kp B   &kp C_MUTE    &none      &kp N     &kp M          &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LALT  &kp LCTRL  &kp LGUI  &mo 1   &kp SPACE     &kp ENTER  &mod_2_1  &kp LG(SPACE)  &kp RCTRL  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &scroll_encoder>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  (    |  )   |       |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F12    &kp F1        &kp F2        &kp F3       &kp F4         &kp F5                           &kp F6     &kp F7        &kp F8           &kp F9       &kp F10   &kp F11
&kp GRAVE  &kp N1        &kp N2        &kp N3       &kp N4         &kp N5                           &kp N6     &kp N7        &kp N8           &kp N9       &kp N0    &kp RBKT
&trans     &kp EXCL      &kp AT        &kp HASH     &kp DLLR       &kp PRCNT                        &kp CARET  &kp AMPS      &kp KP_MULTIPLY  &kp LPAR     &kp RPAR  &kp PIPE
&trans     &kp KP_EQUAL  &kp KP_MINUS  &kp KP_PLUS  &kp LS(MINUS)  &kp LS(EQUAL)  &trans    &trans  &kp MINUS  &kp EQUAL     &kp KP_LPAR      &kp KP_RPAR  &kp BSLH  &trans
                         &trans        &trans       &trans         &trans         &trans    &trans  &trans     &kp CAPSLOCK  &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &scroll_encoder>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp F12  &kp F1      &kp F2     &kp F3       &kp F4       &kp F5                      &kp F6     &kp F7            &kp F8      &kp F9      &kp F10  &kp DEL
&trans   &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                      &kp PG_UP  &trans            &kp UP      &trans      &kp N0   &kp RBKT
&trans   &kp LALT    &kp LCTRL  &kp LSHFT    &trans       &kp CLCK                    &kp PG_DN  &kp LEFT          &kp DOWN    &kp RIGHT   &kp DEL  &kp BSPC
&trans   &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans    &trans    &trans  &trans     &kp K_PLAY_PAUSE  &kp K_PREV  &kp K_NEXT  &trans   &trans
                     &trans     &trans       &trans       &trans    &trans    &trans  &trans     &trans            &trans      &trans
            >;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &none  &none  &none  &none  &none  &studio_unlock
&ext_power EP_TOG  &none         &none         &none         &none         &none                                     &none  &none  &none  &none  &none  &none
&none              &none         &none         &none         &none         &none                                     &none  &none  &none  &none  &none  &none
&none              &none         &none         &none         &none         &none         &bootloader    &bootloader  &none  &none  &none  &none  &none  &none
                                 &none         &none         &none         &none         &none          &none        &none  &none  &none  &none
            >;
        };
    };
};
